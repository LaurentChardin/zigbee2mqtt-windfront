name: Build container

on:
  workflow_run:
    workflows: [Publish package to npmjs]
    types: [completed]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to mimic Git tag.'
        required: true
        default: 'v1.0.0'
        type: string
      version:
        description: 'Version to mimic Git tag without "v".'
        required: true
        default: '1.0.0'
        type: string
      major_minor:
        description: 'Version to mimic Git tag (major.minor only).'
        required: true
        default: '1.0'
        type: string
      major:
        description: 'Version to mimic Git tag (major only).'
        required: true
        default: '1'
        type: string

permissions:
  contents: read

env:
  REGISTRY: ghcr.io

jobs:
  build:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Build package
        run: NODE_ENV=production npm run build

      - name: Log in to the GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker setup - QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker setup - Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
            images: |
                ghcr.io/nerivec/zigbee2mqtt-windfront
            tags: |
                type=semver,pattern={{version}},value=${{ inputs.version || '' }}
                type=semver,pattern={{major}}.{{minor}},value=${{ inputs.major_minor || '' }}
                type=semver,pattern={{major}},value=${{ inputs.major || '' }}

      - name: Docker build and push
        uses: docker/build-push-action@v6
        with:
            context: .
            file: Dockerfile
            platforms: linux/arm64/v8,linux/amd64,linux/arm/v6,linux/arm/v7,linux/riscv64,linux/386
            tags: ${{ steps.meta.outputs.tags }}
            push: true
            build-args: |
                VERSION=${{ inputs.tag || github.ref_name }}
                DATE=${{ github.event.repository.updated_at }}
